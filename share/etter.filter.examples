############################################################################
#                                                                          #
#  ettercap -- etter.filter.examples -- filter source file                 #
#                                                                          #
#  Copyright (C) 2001-2003  ALoR & NaGA                                    #
#                                                                          #
#  This program is free software; you can redistribute it and/or modify    #
#  it under the terms of the GNU General Public License as published by    #
#  the Free Software Foundation; either version 2 of the License, or       #
#  (at your option) any later version.                                     #
#                                                                          #
############################################################################

# make sure this filter will not be used...
exit();


# display a message if the tcp port is 22
if (ip.proto == TCP) {
   if (tcp.src == 22 || tcp.dst == 22) {
      msg("SSH packet");
   }
}


# log all telnet traffic, also execute ./program on every packet
if (ip.proto == TCP) {
   if (tcp.src == 23 || tcp.dst == 23) {
      log(DATA.data, "./logfile.log");
      exec("./program");
   }
}


# some operation on the payload of the packet
if ( DATA.data + 20 == 0x4142 ) {
   DATA.data + 20 = 0x4243;
} else {
   DATA.data + 20 = 0x4445;
}


# drop any packet containing "ettercap"
if (search(DECODED.data, "ettercap")) {
   msg("some one is talking about us...");
   drop();
}


# log ssh decrypted packets matching the regexp
if (ip.proto == TCP) {
   if (tcp.src == 22 || tcp.dst == 22) {
      if (regex(DECODED.data, ".*login.*")) {
         log(DECODED.data, "./decrypted_log");
      }
   }
}

# dying packets
if (ip.ttl < 5) {
   msg("The packet will die soon");
}

# string comparison at a given offset
if (DATA.data + 40 == "ette") {
   log(DATA.data, "./logfile");
}

# inject a file after a specific packet
if (ip.src == 21 && search(DATA.data, "root")) {
   inject("./fake_response");
}

# replace the entire packet with another
if (ip.src == 23 && search(DATA.data, "microsoft")) {
   drop();
   inject("./fake_telnet");
}

# eof

# vim:ts=3:expandtab
